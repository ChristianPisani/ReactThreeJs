/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\\CornFieldGroundFirst.glb
*/

import React, {
    useRef
} from 'react'
import {
    useGLTF
} from '@react-three/drei'
import * as CANNON
    from "cannon";
import {
    useTrimesh
} from "@react-three/cannon";
import node
    from "three/addons/nodes/core/Node.js";

export function CornFieldGroundFirst(props) {
    const {
        nodes,
        materials
    } = useGLTF('/CornFieldGroundFirst.glb')

    Object.keys(nodes).forEach(nodeKey => {
        const node = nodes[nodeKey];

        if (node?.geometry) {
            const vertices = nodes[nodeKey].geometry.attributes.position.array;
            const indices = nodes[nodeKey].geometry.index.array;

            const [collider] = useTrimesh(() => ({
                args: [vertices, indices],
                mass: 0,
                type: "Dynamic",
                collisionFilterGroup: 2,
            }));
        }
    });

    return (
        <group {...props}
               dispose={null}>
            {Object.keys(nodes).map(nodeKey => (
                <mesh
                    receiveShadow
                    castShadow
                    geometry={nodes[nodeKey].geometry}
                    material={nodes[nodeKey].material}/>
            ))}
        </group>
    )
}

useGLTF.preload('/CornFieldGroundFirst.glb')
